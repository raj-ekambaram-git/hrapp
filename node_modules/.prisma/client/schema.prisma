// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Address {
  id             Int           @id @default(autoincrement())
  type           AddressType   @default(D)
  address1       String
  addressName    String        @default("")
  address2       String?
  address3       String?
  county         String?
  city           String
  state          String
  zipCode        String
  country        String
  primary        Boolean       @default(false)
  createdDate    DateTime      @default(now())
  lastUpdateDate DateTime      @updatedAt
  status         AddressStatus
  account        Account       @relation(fields: [accountId], references: [id])
  accountId      Int           @default(0)
  User           User?         @relation(fields: [userId], references: [id])
  userId         Int?
  Vendor         Vendor?       @relation(fields: [vendorId], references: [id])
  vendorId       Int?
  Project        Project[]
}

model Account {
  id             Int           @id @default(autoincrement())
  name           String
  description    String
  ein            String        @unique
  bankId         Int?
  email          String
  phone          String        @default("111-111-1111")
  status         AccountStatus
  createdDate    DateTime      @default(now())
  lastUpdateDate DateTime      @updatedAt
  address        Address[]
  Invoice        Invoice[]
  Vendor         Vendor[]
  User           User[]
  Project        Project[]
}

model Vendor {
  id                  Int          @id @default(autoincrement())
  name                String
  description         String?
  email               String
  phone               String       @default("111-111-1111")
  type                VendorType   @default(Staffing)
  address             Address[]
  account             Account?     @relation(fields: [accountId], references: [id])
  accountId           Int?         @default(0)
  ein                 String       @unique
  bankDetails         String?
  status              VendorStatus
  createdDate         DateTime     @default(now())
  accountContactName  String?
  accountContactEmail String?
  accountContactPhone String?
  lastUpdateDate      DateTime     @updatedAt
  invoice             Invoice[]
  user                User[]
  project             Project[]
}

model ProjectResource {
  id              Int            @id @default(autoincrement())
  project         Project?       @relation(fields: [projectId], references: [id])
  projectId       Int?           @default(1)
  user            User?          @relation(fields: [userId], references: [id])
  userId          Int?           @default(1)
  unitPrice       Decimal?
  currency        Currency?
  quantity        Int?
  billable        Boolean        @default(false)
  uom             UnitOfMeasure?
  budgetAllocated Decimal?       @default(0)
}

model Invoice {
  id             Int           @id @default(autoincrement())
  description    String        @default("")
  type           InvoiceType
  vendor         Vendor?       @relation(fields: [vendorId], references: [id])
  vendorId       Int?          @default(0)
  account        Account?      @relation(fields: [accountId], references: [id])
  accountId      Int?          @default(0)
  project        Project?      @relation(fields: [projectId], references: [id])
  projectId      Int?          @default(0)
  invoiceDate    DateTime      @default(now())
  dueDte         DateTime?
  transactionId  String?
  notes          String?
  invoiceEmailTo String?
  total          Decimal
  paidAmount     Decimal?
  status         InvoiceStatus
  paymentTerms   PaymentTerms
  createdDate    DateTime      @default(now())
  lastUpdateDate DateTime      @updatedAt
  invoiceItems   InvoiceItem[]
}

model InvoiceItem {
  id             Int             @id @default(autoincrement())
  description    String?         @default("")
  type           InvoiceItemType
  unitPrice      Decimal         @default(0)
  currency       Currency
  quantity       Int             @default(1)
  uom            UnitOfMeasure
  total          Decimal         @default(0)
  status         InvoiceStatus
  generalNote    String?
  user           User?           @relation(fields: [userId], references: [id])
  userId         Int?
  invoice        Invoice?        @relation(fields: [invoiceId], references: [id])
  invoiceId      Int?
  fromDate       DateTime?
  toDate         DateTime?
  createdDate    DateTime        @default(now())
  lastUpdateDate DateTime        @updatedAt
}

model Project {
  id                     Int               @id @default(autoincrement())
  name                   String
  referenceCode          String
  description            String            @default("")
  type                   InvoiceItemType
  invoiceCycle           InvoiceCycle
  addressId              Int               @default(0)
  address                Address?          @relation(fields: [addressId], references: [id])
  vendorId               Int               @default(0)
  vendor                 Vendor?           @relation(fields: [vendorId], references: [id])
  accountId              Int               @default(0)
  account                Account?          @relation(fields: [accountId], references: [id])
  budget                 Decimal           @default(0)
  totalHours             Int?              @default(0)
  averageRate            Decimal?
  timeSheetNotesRequired Boolean           @default(false)
  status                 ProjectStatus
  contactName            String?
  contactEmail           String?
  contactPhone           String?
  createdDate            DateTime          @default(now())
  lastUpdateDate         DateTime          @updatedAt
  invoice                Invoice[]
  projectResource        ProjectResource[]

  timesheetEntries TimesheetEntries[]
}

model User {
  id                 Int               @id @default(autoincrement())
  firstName          String
  lastName           String
  role               Role              @default(DEVELOPER)
  email              String            @unique
  phone              String            @default("111-111-1111")
  account            Account?          @relation(fields: [accountId], references: [id])
  accountId          Int?              @default(0)
  vendor             Vendor?           @relation(fields: [vendorId], references: [id])
  vendorId           Int?              @default(0)
  isTimeSheetEnabled Boolean           @default(false)
  address            Address[]
  userAttributes     UserAttributes[]
  status             UserStatus        @default(Active)
  password           String            @default("passw0rd")
  createdDate        DateTime          @default(now())
  lastUpdateDate     DateTime          @updatedAt
  invoiceItem        InvoiceItem[]
  projectResource    ProjectResource[]
  timesheet          Timesheet[]
}

model UserAttributes {
  id                 Int               @id @default(autoincrement())
  userAttributeKey   UserAttributeKeys @default(default)
  userAttributeValue String?
  createdDate        DateTime          @default(now())
  lastUpdateDate     DateTime          @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model Timesheet {
  id               Int                @id @default(autoincrement())
  name             String             @default("")
  type             TimesheetType
  user             User?              @relation(fields: [userId], references: [id])
  userId           Int?               @default(1)
  status           TimesheetStatus
  createdDate      DateTime           @default(now())
  lastUpdateDate   DateTime           @updatedAt
  timesheetEntries TimesheetEntries[]
}

model Calendar {
  id                    Int      @id @default(autoincrement())
  calendarDate          DateTime
  businessDay           Boolean
  weekDay               Boolean
  isMonthBeginDate      Boolean  @default(false)
  isMonthEndDate        Boolean  @default(false)
  vendorObservedHoliday Boolean  @default(false)
}

model TimesheetEntries {
  id           Int             @id @default(autoincrement())
  timesheet    Timesheet?      @relation(fields: [timesheetId], references: [id])
  timesheetId  Int?
  project      Project?        @relation(fields: [projectId], references: [id])
  projectId    Int?            @default(1)
  status       TimesheetStatus
  approvedDate DateTime?
  entries      Json
}

enum AddressType {
  D
  U
  A
  V
}

enum UserAttributeKeys {
  default
  rate
  startDate
  endDate
}

enum UserStatus {
  Active
  Inactive
}

enum Role {
  SUPER_ADMIN
  ACCOUNT_ADMIN
  ACCOUNT_VENDOR_REP
  ACCOUNT_USER
  ACCOUNT_VENDOR_EMPLOYEE
  ACCOUNT_VENDOR_CONTRACTOR
  ACCOUNT_MANAGER
  DEVELOPER
}

enum VendorType {
  Staffing
  Product
  Project
}

enum VendorStatus {
  Approved
  Rejected
  Active
  Inactive
  Fraud
}

enum AccountStatus {
  Active
  Inactive
  Fraud
}

enum AddressStatus {
  A
  I
  D
}

enum InvoiceType {
  Staffing
  Product
  Project
}

enum InvoiceCycle {
  Weekly
  BiWeekly
  Monthly
  Quarterly
  HalfYearly
  Yearly
}

enum InvoiceStatus {
  Draft
  Submitted
  Pending
  PartiallyPaid
  Paid
  Cancelled
}

enum PaymentTerms {
  Net30
  Net45
  Net60
  Net90
}

enum InvoiceItemType {
  General
  Project
  Staffing
}

enum UnitOfMeasure {
  Hours
  Item
}

enum Currency {
  USD
  INR
}

enum ProjectStatus {
  Created
  Open
  Closed
  Settled
}

enum TimesheetType {
  Weekly
  Monthly
  Quarterly
}

enum TimesheetStatus {
  Draft
  Saved
  Submitted
  Approved
  Rejected
  Invoiced
}
